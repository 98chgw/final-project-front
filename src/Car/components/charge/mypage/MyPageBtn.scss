// 버튼 컨테이너 스타일
.ButtonContainer {
    display: grid;
    grid-template-columns: repeat(4, 200px); // 버튼 너비를 250px로 설정
    gap: 100px; // 버튼 사이의 간격
    max-width: 1180px; // 최대 너비 설정 (필요에 따라 조정 가능)
    margin: 250px auto; // 가운데 정렬 및 상단 마진 추가
    z-index: 1; // 비디오 위에 버튼이 배치되도록 설정
    position: relative; // 애니메이션 효과를 위한 상대적 위치 설정
}

// 버튼 스타일
.GridButton {
    width: 250px; // 버튼 너비 설정
    height: 250px; // 버튼 높이 설정
    border: 2px solid #ffff; // 버튼 테두리 설정 (기본적으로 투명)
    border-radius: 50%; // 버튼을 동그랗게 설정
    cursor: pointer; // 마우스 커서 변경
    display: flex; // 버튼 내용 중앙 정렬을 위한 flex 사용
    align-items: center; // 버튼 내용 수직 중앙 정렬
    justify-content: center; // 버튼 내용 수평 중앙 정렬
    overflow: hidden; // 이미지가 버튼 영역을 벗어나지 않도록 설정
    padding: 0; // 패딩 제거
    transition: background-color 0.3s ease, border-color 0.3s ease, transform 0.3s ease; // 배경색, 테두리 색상, 스케일 전환 효과
    opacity: 0.8;
    position: relative; // 테두리 효과를 위해 상대적 위치 설정

    // 버튼 애니메이션
    animation: slideIn 0.8s ease-out; // 애니메이션 추가
    // 애니메이션 딜레이 설정
    animation-delay: calc(var(--i) * 0.2s); // 버튼 순서에 따라 지연 시간 적용

    // 호버 시 배경색과 테두리 색상 변경
    &:hover {
        background-color: #41464b; // 호버 시 배경색 변경
        border-color: black; // 호버 시 테두리 색상 변경
    }
}

// 버튼에 그림자 효과 추가
.GridButton::before {
    content: ''; // 내용 없음
    position: absolute; // 절대 위치 설정
    top: 50%; // 상단 위치 중앙
    left: 50%; // 좌측 위치 중앙
    width: 100%; // 너비를 버튼의 너비와 동일하게 설정
    height: 100%; // 높이를 버튼의 높이와 동일하게 설정
    border-radius: 50%; // 버튼과 동일한 동그란 모양으로 설정
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.3); // 그림자 효과 설정
    transform: translate(-50%, -50%); // 중앙 정렬
    pointer-events: none; // 클릭 이벤트 무시
}

// 버튼 애니메이션
@keyframes slideIn {
    from {
        transform: translateX(calc(var(--start) * 1vw)) scale(0.2); // 시작 위치 설정
        opacity: 0; // 시작 시 불투명도 0
    }

    to {
        transform: translateX(0) scale(1); // 버튼을 원래 위치로 이동
        opacity: 1; // 끝나면서 불투명도 1
    }
}

// 각 버튼의 애니메이션 시작 위치 설정
.GridButton:nth-child(1) {
    --start: 55; // 첫 번째 버튼: 100vw
}

.GridButton:nth-child(2) {
    --start: 35; // 두 번째 버튼: 75vw
}

.GridButton:nth-child(3) {
    --start: 25; // 세 번째 버튼: 40vw
}

.GridButton:nth-child(4) {
    --start: 10; // 네 번째 버튼: 10vw
}

// 이미지 스타일
.ButtonImage {
    width: 100%; // 버튼의 너비에 맞춰서 이미지 크기 조정
    height: 100%; // 버튼의 높이에 맞춰서 이미지 크기 조정
    object-fit: cover; // 이미지가 버튼에 맞게 잘림
}

// 모달 스타일
.ModalContent {
    top: 50%;
    left: 50%;
    right: auto;
    bottom: auto;
    transform: translate(-50%, -50%);
    background-color: #fefefe;
    border-radius: 10px;
    border: 1px solid #ccc;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    padding: 20px;
    max-width: 500px;
    width: 90%;
    position: relative; // 상대적 위치 설정
    overflow: hidden; // 모달 내용의 스크롤바를 숨깁니다.
}

// 오버레이 스타일
.ModalOverlay {
    position: fixed; // 전체 화면을 채우기 위해 고정 위치 설정
    top: 0; // 화면 상단
    left: 0; // 화면 왼쪽
    right: 0; // 화면 오른쪽
    bottom: 0; // 화면 하단
    background-color: rgba(0, 0, 0, 0.75); // 반투명 배경
}

// 닫기 버튼 스타일
.CloseButton {
    font-size: 15px;
    float: right;
    background: #222020;
    color: white;
    border: none;
    border-radius: 50%;
    width: 25px;
    height: 25px;
    text-align: center;
    line-height: 25px;
    cursor: pointer;
    margin: 5px 10px 0 0; // 닫기 버튼을 왼쪽으로 10px 이동
}